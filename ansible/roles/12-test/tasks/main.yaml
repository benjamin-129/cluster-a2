# - name: Run setup for couchdb_0
#   remote_user: ubuntu
#   shell: "{{ item }}"
#   with_items:

#     # Setup Volume Mount:
#     - sudo mkfs -t ext4 /dev/vdb

#     # Mount Volume:
#     - sudo mkdir /couchdb
#     - sudo mount /dev/vdb /couchdb

#     # Build Dockerfile
#     - sudo echo "FROM couchdb:3.0.1" > Dockerfile
#     - sudo echo "EXPOSE 5984" >> Dockerfile
#     - sudo echo "EXPOSE 4369" >> Dockerfile
#     - sudo echo "EXPOSE 9100" >> Dockerfile
#     - sudo echo "ENV COUCHDB_USER=admin" >> Dockerfile
#     - sudo echo "ENV COUCHDB_PASSWORD=password" >> Dockerfile
#     - sudo echo "ENV NODENAME='45.113.234.115'" >> Dockerfile


#     # Build and Start Docker Instance
#     - sudo docker build -t cdb .
#     - sudo docker run --name couchdb -p 4369:4369 -p 5984:5984 -p 9100:9100 -v /couchdb:/opt/couchdb/data -d cdb

      # # Enable Clustering for each node
      # - curl -X POST -H "Content-Type: application/json" http://admin:password@'{{ couchdb_instance_0_ip }}':5984/_cluster_setup -d '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"password", "node_count":"3"}'

#     # Clone Repo
#     - git clone https://benjamin-129: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@github.com/benjamin-129/cluster-a2.git

#     # Install dependencies
#     - sudo apt-get update -y
#     - sudo apt install python3-pip -y
#     - sudo apt install screen -y


#     - sudo echo "CouchDB==1.2" > requirements.txt
#     - sudo echo "geojson==2.5.0" >> requirements.txt
#     - sudo echo "pickleshare==0.7.5" >> requirements.txt
#     - sudo echo "tweepy==3.10.0" >> requirements.txt
#     - sudo echo "afinn==0.1" >> requirements.txt
#     - pip3 install -r requirements.txt

#   become: yes
#   delegate_to: '45.113.234.115'
  
# - name: "Setup CORS for Cluster - p1"
#   remote_user: ubuntu
#   uri:
#       url: http://localhost:5984/_node/couchdb@45.113.233.137/_config/httpd/enable_cors
#       force_basic_auth: yes
#       user: "admin"
#       password: "password"
#       method: PUT 
#       body: '"true"'
#       body_format: json
#       status_code: 200
#       return_content: yes
#   delegate_to: '45.113.233.137'

# - name: "Setup CORS for Cluster - p2"
#   remote_user: ubuntu
#   uri:
#       url: http://localhost:5984/_node/couchdb@45.113.233.137/_config/cors/origins
#       force_basic_auth: yes
#       user: "admin"
#       password: "password"
#       method: PUT 
#       body: '"*"'
#       body_format: json
#       status_code: 200
#       return_content: yes
#   delegate_to: '45.113.233.137'


# - name: "Coordinate Cluster Setup on Node 0: connecting to Node 2 - p2"
#   remote_user: ubuntu
#   uri:
#       url: http://localhost:5984/_cluster_setup
#       force_basic_auth: yes
#       user: "admin"
#       password: "password"
#       method: POST 
#       body: '{"action": "add_node", "host":"45.113.235.25", "port": 5984, "username": "admin", "password":"password"}'
#       body_format: json
#       # status_code: 400
#       status_code: 201
#       return_content: yes
#   delegate_to: '45.113.233.137'


# - name: "Finalise Cluster Configuration on Node 0"
#   remote_user: ubuntu
#   uri:
#       url: http://localhost:5984/_cluster_setup
#       force_basic_auth: yes
#       user: "admin"
#       password: "password"
#       method: POST 
#       body: '{"action": "finish_cluster"}'
#       body_format: json
#       # status_code: 400
#       status_code: 201
#       return_content: yes
#   delegate_to: '45.113.233.137'



# - name: "Task3: Check the status of the remote server from localhost [Ansible master]"
#   remote_user: ubuntu
#   uri:
#       url: http://localhost:5984/_cluster_setup
#       force_basic_auth: yes
#       user: "admin"
#       password: "password"
#       method: POST 
#       body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "admin", "password":"password", "node_count":"3"}'
#       body_format: json
#       status_code: 400
#       return_content: yes
#   delegate_to: '45.113.233.207'


- name: "Create View"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/tweets/_design/Results
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: PUT 
      body: '{
  "views": {
    "TweetCount": {
      "reduce": "_count",
      "map": "function (doc) {\n  emit(doc.sa4, 1);\n}"
    },
    "SentimentSum": {
      "reduce": "_sum",
      "map": "function (doc) {\n  emit(doc.sa4, doc.sent_score);\n}"
    }
  }
}'
      body_format: json
      status_code: 201
      return_content: yes
  delegate_to: '45.113.233.237'