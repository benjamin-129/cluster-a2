- debug:
    msg: "CouchDB IPs: {{ couchdb_instance_0_ip }}','{{ couchdb_instance_1_ip }}', '{{ couchdb_instance_2_ip }}, {{ web_front_end_ip }}"

- name: Run setup for couchdb_0
  remote_user: ubuntu
  shell: "{{ item }}"
  with_items:

    # Setup Volume Mount:
    - sudo mkfs -t ext4 /dev/vdb

    # Mount Volume:
    - sudo mkdir /couchdb
    - sudo mount /dev/vdb /couchdb

    # Build Dockerfile
    # - sudo echo "FROM couchdb:3.0.1" > Dockerfile
    - sudo echo "FROM couchdb:2.3.1" > Dockerfile
    - sudo echo "EXPOSE 5984" >> Dockerfile
    - sudo echo "EXPOSE 4369" >> Dockerfile
    - sudo echo "EXPOSE 9100" >> Dockerfile
    - sudo echo "ENV COUCHDB_USER=admin" >> Dockerfile
    - sudo echo "ENV COUCHDB_PASSWORD=password" >> Dockerfile
    - sudo echo "ENV NODENAME='{{ couchdb_instance_0_ip }}'" >> Dockerfile

    # Build and Start Docker Instance
    - sudo docker build -t cdb .
    - sudo docker run --name couchdb -p 4369:4369 -p 5984:5984 -p 9100:9100 -v /couchdb:/opt/couchdb/data -d cdb

    # Clone Repo -> Change when we make the repo public
    - git clone https://benjamin-129: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@github.com/benjamin-129/cluster-a2.git

    # Install dependencies
    - sudo apt-get update -y
    - sudo apt install python3-pip -y
    - sudo apt install screen -y

    - sudo echo "CouchDB==1.2" > requirements.txt
    - sudo echo "geojson==2.5.0" >> requirements.txt
    - sudo echo "pickleshare==0.7.5" >> requirements.txt
    - sudo echo "tweepy==3.10.0" >> requirements.txt
    - sudo echo "afinn==0.1" >> requirements.txt
    - pip3 install -r requirements.txt
    - pip3 install sklearn

  become: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'


- name: Run setup for couchdb_1
  remote_user: ubuntu
  shell: "{{ item }}"
  with_items:

    # Setup Volume Mount:
    - sudo mkfs -t ext4 /dev/vdb

    # Mount Volume:
    - sudo mkdir /couchdb
    - sudo mount /dev/vdb /couchdb

    # Build Dockerfile
    # - sudo echo "FROM couchdb:3.0.1" > Dockerfile
    - sudo echo "FROM couchdb:2.3.1" > Dockerfile
    - sudo echo "EXPOSE 5984" >> Dockerfile
    - sudo echo "EXPOSE 4369" >> Dockerfile
    - sudo echo "EXPOSE 9100" >> Dockerfile
    - sudo echo "ENV COUCHDB_USER=admin" >> Dockerfile
    - sudo echo "ENV COUCHDB_PASSWORD=password" >> Dockerfile
    - sudo echo "ENV NODENAME='{{ couchdb_instance_1_ip }}'" >> Dockerfile


    # Build and Start Docker Instance
    - sudo docker build -t cdb .
    - sudo docker run --name couchdb -p 4369:4369 -p 5984:5984 -p 9100:9100 -v /couchdb:/opt/couchdb/data -d cdb

    # Clone Repo
    - git clone https://benjamin-129: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@github.com/benjamin-129/cluster-a2.git

    # Install dependencies
    - sudo apt-get update -y
    - sudo apt install python3-pip -y
    - sudo apt install screen -y

    - sudo echo "CouchDB==1.2" > requirements.txt
    - sudo echo "geojson==2.5.0" >> requirements.txt
    - sudo echo "pickleshare==0.7.5" >> requirements.txt
    - sudo echo "tweepy==3.10.0" >> requirements.txt
    - sudo echo "afinn==0.1" >> requirements.txt
    - pip3 install -r requirements.txt
    - pip3 install sklearn

  become: yes
  delegate_to: '{{ couchdb_instance_1_ip }}'


- name: Run setup for couchdb_2
  remote_user: ubuntu
  shell: "{{ item }}"
  with_items:

    # Setup Volume Mount:
    - sudo mkfs -t ext4 /dev/vdb

    # Mount Volume:
    - sudo mkdir /couchdb
    - sudo mount /dev/vdb /couchdb

    # Build Dockerfile
    # - sudo echo "FROM couchdb:3.0.1" > Dockerfile
    - sudo echo "FROM couchdb:2.3.1" > Dockerfile
    - sudo echo "EXPOSE 5984" >> Dockerfile
    - sudo echo "EXPOSE 4369" >> Dockerfile
    - sudo echo "EXPOSE 9100" >> Dockerfile
    - sudo echo "ENV COUCHDB_USER=admin" >> Dockerfile
    - sudo echo "ENV COUCHDB_PASSWORD=password" >> Dockerfile
    - sudo echo "ENV NODENAME='{{ couchdb_instance_2_ip }}'" >> Dockerfile

    # Build and Start Docker Instance
    - sudo docker build -t cdb .
    - sudo docker run --name couchdb -p 4369:4369 -p 5984:5984 -p 9100:9100 -v /couchdb:/opt/couchdb/data -d cdb

    # Clone Repo
    - git clone https://benjamin-129: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@github.com/benjamin-129/cluster-a2.git

    # Install dependencies
    - sudo apt-get update -y
    - sudo apt install python3-pip -y
    - sudo apt install screen -y

    - sudo echo "CouchDB==1.2" > requirements.txt
    - sudo echo "geojson==2.5.0" >> requirements.txt
    - sudo echo "pickleshare==0.7.5" >> requirements.txt
    - sudo echo "tweepy==3.10.0" >> requirements.txt
    - sudo echo "afinn==0.1" >> requirements.txt
    - pip3 install -r requirements.txt
    - pip3 install sklearn

  become: yes
  delegate_to: '{{ couchdb_instance_2_ip }}'


- name: "Enable Clustering for Node 0"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "admin", "password":"password", "node_count":"3"}'
      body_format: json
      status_code: 400
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'

- name: "Enable Clustering for Node 1"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "admin", "password":"password", "node_count":"3"}'
      body_format: json
      status_code: 400
      return_content: yes
  delegate_to: '{{ couchdb_instance_1_ip }}'

- name: "Enable Clustering for Node 2"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "admin", "password":"password", "node_count":"3"}'
      body_format: json
      status_code: 400
      return_content: yes
  delegate_to: '{{ couchdb_instance_2_ip }}'

- name: "Coordinate Cluster Setup on Node 0: connecting to Node 1 - p1"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"password", "port": 5984, "node_count": "3", "remote_node": "{{ couchdb_instance_1_ip }}", "remote_current_user": "admin", "remote_current_password": "password" }'
      body_format: json
      # status_code: 400
      status_code: 201
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'

- name: "Coordinate Cluster Setup on Node 0: connecting to Node 1 - p2"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "add_node", "host":"{{ couchdb_instance_1_ip }}", "port": 5984, "username": "admin", "password":"password"}'
      body_format: json
      # status_code: 400
      status_code: 201
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'

- name: "Coordinate Cluster Setup on Node 0: connecting to Node 2 - p1"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"password", "port": 5984, "node_count": "3", "remote_node": "{{ couchdb_instance_2_ip }}", "remote_current_user": "admin", "remote_current_password": "password" }'
      body_format: json
      # status_code: 400
      status_code: 201
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'

- name: "Coordinate Cluster Setup on Node 0: connecting to Node 2 - p2"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "add_node", "host":"{{ couchdb_instance_2_ip }}", "port": 5984, "username": "admin", "password":"password"}'
      body_format: json
      # status_code: 400
      status_code: 201
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'


- name: "Finalise Cluster Configuration on Node 0"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_cluster_setup
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: POST 
      body: '{"action": "finish_cluster"}'
      body_format: json
      # status_code: 400
      status_code: 201
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'


- name: "Setup CORS for Cluster - p1"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_node/couchdb@{{ couchdb_instance_0_ip }}/_config/httpd/enable_cors
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: PUT 
      body: '"true"'
      body_format: json
      status_code: 200
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'

- name: "Setup CORS for Cluster - p2"
  remote_user: ubuntu
  uri:
      url: http://localhost:5984/_node/couchdb@{{ couchdb_instance_0_ip }}/_config/cors/origins
      force_basic_auth: yes
      user: "admin"
      password: "password"
      method: PUT 
      body: '"*"'
      body_format: json
      status_code: 200
      return_content: yes
  delegate_to: '{{ couchdb_instance_0_ip }}'


- name: Start Harvesters couch0
  shell: cd cluster-a2/tweet_harvester; nohup python3 harvest.py 0 localhost &
  remote_user: ubuntu
  delegate_to: '{{ couchdb_instance_0_ip }}'

- name: Start Harvesters couch0
  shell: cd cluster-a2/tweet_harvester; nohup python3 harvest.py 1 localhost &
  remote_user: ubuntu
  delegate_to: '{{ couchdb_instance_1_ip }}'

- name: Start Harvesters couch0
  shell: cd cluster-a2/tweet_harvester; nohup python3 harvest.py 2 localhost &
  remote_user: ubuntu
  delegate_to: '{{ couchdb_instance_2_ip }}'



  