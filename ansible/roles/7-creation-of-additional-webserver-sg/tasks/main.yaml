- debug:
    msg: " CouchDB instance 0 has IP {{ couchdb_instance_0_ip }}, {{ couchdb_instance_1_ip }}, {{ couchdb_instance_2_ip }}, {{ web_front_end_ip }}" 

- name: Setting couchdb_instance_0_ip fact
  set_fact:
    couchdb_inst_ips: ['{{ couchdb_instance_0_ip }}','{{ couchdb_instance_1_ip }}', '{{ couchdb_instance_2_ip }}']


# Creating Webserver HTTP ingress SG
- name: Create "Webserver HTTP/HTTPS Ingress from CouchDB Instances" Security Group
  os_security_group:
    name: 'Webserver HTTP/HTTPS Ingress from CouchDB Instances'
    description: 'Allowing ingress HTTP and HTTPS traffic (80) from Couch DB Instances'
    state: present

# Attach HTTP Port rules to SG
- name: Attach Security Group rules (HTTP port) for "Webserver HTTP/HTTPS Ingress from CouchDB Instances"
  os_security_group_rule:
    security_group: 'Webserver HTTP/HTTPS Ingress from CouchDB Instances'
    protocol: 'tcp'
    direction: 'ingress'
    port_range_min: '80'
    port_range_max: '80'
    remote_ip_prefix: '{{ item }}/32'
    state: present
  loop: '{{ couchdb_inst_ips }}'

- name: Attach Security Group rules (HTTPS port) for "Webserver HTTP/HTTPS Ingress from CouchDB Instances"
  os_security_group_rule:
    security_group: 'Webserver HTTP/HTTPS Ingress from CouchDB Instances'
    protocol: 'tcp'
    direction: 'ingress'
    port_range_min: '443'
    port_range_max: '443'
    remote_ip_prefix: '{{ item }}/32'
    state: present
  loop: '{{ couchdb_inst_ips }}'

# Creating Webserver HTTP/S ingress from Internet SG
- name: Create "Webserver HTTP/HTTPS Ingress from Internet" Security Group
  os_security_group:
    name: 'Webserver HTTP/HTTPS Ingress from Internet'
    description: 'Allowing Webserver ingress HTTP smd HTTPS traffic (80/443) from Internet'
    state: present

# Attach HTTP Port rules to SG
- name: Attach Security Group rules (HTTP ports) for "Webserver HTTP/HTTPS Ingress from Internet"
  os_security_group_rule:
    security_group: 'Webserver HTTP/HTTPS Ingress from Internet'
    protocol: 'tcp'
    direction: 'ingress'
    port_range_min: '80'
    port_range_max: '80'
    remote_ip_prefix: '0.0.0.0/0'
    state: present

# Attach HTTPS Port rules to SG
- name: Attach Security Group rules (HTTPS ports) for "Webserver HTTP/HTTPS Ingress from Internet"
  os_security_group_rule:
    security_group: 'Webserver HTTP/HTTPS Ingress from Internet'
    protocol: 'tcp'
    direction: 'ingress'
    port_range_min: '443'
    port_range_max: '443'
    remote_ip_prefix: '0.0.0.0/0'
    state: present

- name: Attach Security Group rules (3000) for "Webserver HTTP/HTTPS Ingress from Internet"
  os_security_group_rule:
    security_group: 'Webserver HTTP/HTTPS Ingress from Internet'
    protocol: 'tcp'
    direction: 'ingress'
    port_range_min: '3000'
    port_range_max: '3000'
    remote_ip_prefix: '0.0.0.0/0'
    state: present

# Creating Webserver HTTP egress to Internet SG
- name: Create "Webserver HTTP egress to Internet" Security Group
  os_security_group:
    name: 'Webserver HTTP egress to Internet'
    description: 'Allowing Webserver ingress HTTP smd HTTPS traffic (80/443) from Internet'
    state: present


# Attach HTTP Port rules to SG
- name: Attach Security Group rules (HTTP ports) for "Webserver HTTP Egress to Internet"
  os_security_group_rule:
    security_group: 'Webserver HTTP egress to Internet'
    protocol: 'tcp'
    direction: 'egress'
    port_range_min: '80'
    port_range_max: '80'
    remote_ip_prefix: '0.0.0.0/0'
    state: present

# Attach HTTP Port rules to SG
- name: Attach Security Group rules (3000) for "Webserver HTTP Egress to Internet"
  os_security_group_rule:
    security_group: 'Webserver HTTP egress to Internet'
    protocol: 'tcp'
    direction: 'egress'
    port_range_min: '3000'
    port_range_max: '3000'
    remote_ip_prefix: '0.0.0.0/0'
    state: present

# Creating Webserver CouchDB ingress from CouchDB instances SG
- name: Create "Webserver CouchDB Ingress from CouchDB Instances" Security Group
  os_security_group:
    name: 'Webserver CouchDB Ingress from CouchDB Instances'
    description: 'Allowing Webserver ingress (port 5984) traffic from CouchDB instances'
    state: present

- name: Attach Security Group rules (CouchDB port) for "Webserver CouchDB Ingress from CouchDB Instances"
  os_security_group_rule:
    security_group: 'Webserver CouchDB Ingress from CouchDB Instances'
    protocol: 'tcp'
    direction: 'ingress'
    port_range_min: '5984'
    port_range_max: '5984'
    remote_ip_prefix: '{{ item }}/32'
    state: present
  loop: '{{ couchdb_inst_ips }}'

# Creating Webserver CouchDB egress to CouchDB instances SG
- name: Create "Webserver CouchDB egress to CouchDB Instances" Security Group
  os_security_group:
    name: 'Webserver CouchDB Egress to CouchDB Instances'
    description: 'Allowing Webserver ingress (port 5984) traffic to CouchDB instances'
    state: present

- name: Attach Security Group rules (CouchDB port) for "Webserver CouchDB Egress to CouchDB Instances"
  os_security_group_rule:
    security_group: 'Webserver CouchDB Egress to CouchDB Instances'
    protocol: 'tcp'
    direction: 'egress'
    port_range_min: '5984'
    port_range_max: '5984'
    remote_ip_prefix: '{{ item }}/32'
    state: present
  loop: '{{ couchdb_inst_ips }}'

- name: Create a list of security group names
  set_fact:
    webserver_sg: ["SSH access from all", 
    "Webserver HTTP/HTTPS Ingress from CouchDB Instances",
    "Webserver HTTP/HTTPS Ingress from Internet", 
    "Webserver HTTP egress to Internet",
    "Webserver CouchDB Ingress from CouchDB Instances",
    "Webserver CouchDB Egress to CouchDB Instances"]

- debug:
    msg: "Security group(s) {{ webserver_sg }} have been created."

# REFERENCES
# 
# Ansible 2021, Loops, viewed 1st May 2021, 
# <https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#iterating-over-a-simple-list>
# 
# Ansible 2021, os_security_group_rule - Add/Delete rule from an existing security group, viewed 1st May 2021, 
# <https://docs.ansible.com/ansible/2.5/modules/os_security_group_rule_module.html>
# 
# Ansible 2021, os_server - Create/Delete Compute Instances from Openstack, viewed 25th April 2021, <https://docs.ansible.com/ansible/2.4/os_server_module.html>
# 
# Ansible 2021, Tags, viewed 25th April 2021, 
# <https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html>.
# 
# Apache Software Foundation 2021, 2.2/ Cluster Setup, viewed 1st May 2021,
# <https://docs.couchdb.org/en/stable/setup/cluster.html>.
# 
# Eisenkot, G 2020, Security challenges and risks with infrastructure as code, viewed 21st May 2021,
# <https://bridgecrew.io/blog/security-challenges-and-risks-with-infrastructure-as-code/>
# 
# Harrower, M. and Bloch, M., 2006. MapShaper. org: A map generalization web service. IEEE Computer Graphics and Applications, 26(4), pp.22-27.
# 
# Internet Assigned Numbers Authority 2021, Service Name and Transport Protocol Port Number Registry, viewed 1st May 2021, <https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?search=http>.
# 
# JGraph 2021, diagrams.net, viewed 1st April 2021, 
# <https://www.diagrams.net>.
# 
# Pan, A 2021, Workshop 9-10 Ansible, The University of Melbourne, Parkville, viewed 24th April 2021, <https://canvas.lms.unimelb.edu.au/courses/105440/files/7077574/download?download_frd=1>.
# 
# Pan, A 2021, Workshop 9-10 Ansible Code, The University of Melbourne, Parkville, viewed 24th April 2021, <https://canvas.lms.unimelb.edu.au/files/7112800/download?download_frd=1>.
# 
# The University of Melbourne 2021, Re:Cite, viewed 21st May 2021, 
# <https://library.unimelb.edu.au/recite>.
# 
# Tutorials Point 2021, YAML - Comments, viewed 1st May 2021, 
# <https://www.tutorialspoint.com/yaml/yaml_comments.htm>.
# 
# Vasiljevic, S 2020, Infrastructure As Code Demistifyed: IaC Benefits, Challenges and Best Practies, viewed 21st May 2021, 
# <https://superadmins.com/infrastructure-as-code-demystified-iac-benefits-challenges-best-practices/>